plugins {
    id 'com.moowork.node' version '1.2.0'
}

import com.bmuschko.gradle.docker.tasks.image.*

def uiBaseDir = "${project.projectDir}/src/content"
def uiOutputDir = "${uiBaseDir}/dist"
def npmDir = "${uiBaseDir}/npm"

sourceSets {
    content {
        resources {
            srcDirs = [uiOutputDir]
        }
    }
}

dependencies {
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "io.springfox:springfox-swagger2:${swaggerVersion}"
}

node {
    version = '11.6.0'
    npmVersion = '6.5.0'
    npmWorkDir = file(npmDir)
    nodeModulesDir = file(uiBaseDir)
}

npmSetup {
    outputs.dir(npmDir)
}

task installDeps(type: NpmTask) {
    inputs.file("${uiBaseDir}/package.json")
    outputs.dir("${uiBaseDir}/node_modules")
    args = ['install']
}

task buildAppUi(type: NpmTask, dependsOn: installDeps) {
    inputs.dir("${uiBaseDir}/web")
    outputs.dir("${uiOutputDir}/web")
    args = ['run', "web-${buildUiProfile}"]
}

task buildRestUi(type: NpmTask, dependsOn: installDeps) {
    inputs.dir("${uiBaseDir}/rest")
    outputs.dir("${uiOutputDir}/rest")
    args = ['run', "rest-${buildUiProfile}"]
}

processResources {
    dependsOn(buildAppUi, buildRestUi)
}

def nginxContentDirectory = "/usr/share/nginx/html"

task copyNginxConfig(type: Copy) {
    from file("$uiBaseDir/nginx")
    into "$uiOutputDir/nginx"
}

task dockerFile(type: Dockerfile, dependsOn: [ processResources, copyNginxConfig ]) {
    destFile = file("$uiOutputDir/Dockerfile")
    from "nginx"
    addFile "nginx", "/etc/nginx/conf.d"
    addFile "web", nginxContentDirectory
    addFile "rest", "$nginxContentDirectory/rest"
}

task buildImage(type: DockerBuildImage, dependsOn: dockerFile) {
    inputDir = file(uiOutputDir)
    imageId = project.name
    tags = [ project.name + ':' + project.version ] as Set
}